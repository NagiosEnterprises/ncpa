
#!/bin/bash

# NCPA Post-installation script for Solaris

echo "NCPA: Running post-installation setup..."

# Set proper ownership and permissions
chown -R nagios:nagios /usr/local/ncpa/var
chown nagios:nagios /usr/local/ncpa/etc /usr/local/ncpa/etc/*.cfg*
chmod -R 755 /usr/local/ncpa/var
chmod 755 /usr/local/ncpa/etc
chmod 644 /usr/local/ncpa/etc/*.cfg*

# Create run directory
mkdir -p /usr/local/ncpa/var/run
chown nagios:nagios /usr/local/ncpa/var/run
chmod 755 /usr/local/ncpa/var/run

# Create SMF service manifest
cat > /var/svc/manifest/site/ncpa.xml << 'EOF'
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type='manifest' name='ncpa'>
  <service name='site/ncpa' type='service' version='1'>
    <create_default_instance enabled='false' />
    <single_instance />
    <dependency name='network' grouping='require_all' restart_on='none' type='service'>
      <service_fmri value='svc:/milestone/network:default' />
    </dependency>
    <dependency name='filesystem' grouping='require_all' restart_on='none' type='service'>
      <service_fmri value='svc:/system/filesystem/local' />
    </dependency>
    <exec_method type='method' name='start' exec='/usr/local/ncpa/ncpa' timeout_seconds='60'>
      <method_context working_directory='/usr/local/ncpa'>
        <method_credential user='nagios' group='nagios' />
        <method_environment>
          <envvar name='LD_LIBRARY_PATH' value='/usr/local/ncpa/lib:/usr/local/lib:/lib:/usr/lib' />
          <envvar name='PATH' value='/usr/local/bin:/usr/bin:/bin' />
        </method_environment>
      </method_context>
    </exec_method>
    <exec_method type='method' name='stop' exec=':kill' timeout_seconds='60' />
    <property_group name='startd' type='framework'>
      <propval name='duration' type='astring' value='contract' />
      <propval name='ignore_error' type='astring' value='core,signal' />
    </property_group>
    <property_group name='application' type='application'>
      <stability value='Evolving' />
    </property_group>
    <template>
      <common_name>
        <loctext xml:lang='C'>Nagios Cross-Platform Agent</loctext>
      </common_name>
      <documentation>
        <manpage title='ncpa' section='1' />
      </documentation>
    </template>
  </service>
</service_bundle>
EOF

# Validate the SMF manifest first
echo "NCPA: Validating SMF manifest..."
if svccfg validate /var/svc/manifest/site/ncpa.xml; then
    echo "NCPA: SMF manifest validation passed"
else
    echo "NCPA: ERROR - SMF manifest validation failed"
    echo "NCPA: Manifest content:"
    tail -20 /var/svc/manifest/site/ncpa.xml
    exit 1
fi

# Remove any existing service first
echo "NCPA: Removing any existing SMF service..."
svccfg delete site/ncpa 2>/dev/null || true

# Import the service using direct svccfg commands
echo "NCPA: Importing SMF service..."
if svccfg import /var/svc/manifest/site/ncpa.xml; then
    echo "NCPA: SMF service imported successfully"
else
    echo "NCPA: ERROR - SMF service import failed"
    echo "NCPA: Checking XML syntax..."
    if command -v xmllint >/dev/null 2>&1; then
        xmllint --noout /var/svc/manifest/site/ncpa.xml 2>&1 | head -5
    fi
    echo "NCPA: Checking svccfg validate..."
    svccfg validate /var/svc/manifest/site/ncpa.xml 2>&1 | head -5
fi

# Force a repository refresh
echo "NCPA: Refreshing SMF repository..."
svcadm restart svc:/system/manifest-import:default 2>/dev/null || true
sleep 2

# Try alternative import method if first didn't work
if ! svcs site/ncpa >/dev/null 2>&1; then
    echo "NCPA: Service not found, trying alternative import method..."
    svccfg -s site/ncpa refresh 2>/dev/null || true
    sleep 2
fi

# Wait a moment for SMF to process
sleep 3

# Check if service was imported with detailed diagnostics
echo "NCPA: Checking if service was imported..."
if svcs site/ncpa >/dev/null 2>&1; then
    echo "NCPA: Service found in SMF repository"
    echo "NCPA: Current service status:"
    svcs -l site/ncpa
    
    # Enable the service  
    echo "NCPA: Enabling SMF service..."
    if svcadm enable site/ncpa; then
        echo "NCPA: Service enabled successfully"
        
        # Wait a moment and check status
        sleep 5
        service_status=$(svcs -H -o state site/ncpa 2>/dev/null)
        echo "NCPA: Service status: $service_status"
        
        if [ "$service_status" = "online" ]; then
            echo "NCPA: Service is running successfully"
        else
            echo "NCPA: Service is not online yet - status: $service_status"
            echo "NCPA: Service details:"
            svcs -xv site/ncpa
            echo "NCPA: You may need to check the service logs and start manually:"
            echo "NCPA:   sudo tail -f /var/svc/log/site-ncpa:default.log"
            echo "NCPA:   sudo svcadm restart site/ncpa"
        fi
    else
        echo "NCPA: WARNING - Failed to enable service"
        echo "NCPA: Service status:"
        svcs -xv site/ncpa
    fi
else
    echo "NCPA: ERROR - Service not found in SMF repository after import"
    echo "NCPA: Available services matching 'ncpa':"
    svcs | grep -i ncpa || echo "NCPA: No services found matching 'ncpa'"
    echo "NCPA: All services in site category:"
    svcs | grep site/ || echo "NCPA: No services found in site category"
    echo "NCPA: Checking manifest file:"
    ls -la /var/svc/manifest/site/ncpa.xml
fi

echo "NCPA: Post-installation completed."
echo "NCPA: To manually start the service later, run: sudo svcadm enable site/ncpa"
